curl http://www.google.com/search?q=kali  
## Gives a client not allowed error, good chance to probe the crowd about figuring out how to figure out why?
## What is different between this and netcat/telnet?
curl -A "" http://www.google.com/search?q=kali -0
## Now we know that Google discriminates against the User-agent header
curl -H "User-agent:Dan Rocks!" http://www.google.com/search?q=kali -0
## And they certainly don't respect my authority!
## Who's authority would they respect?  My browser?  More wireshark to get user-agent on a browser search to Google
curl -A "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" http://www.google.com/search?q=kali -0
curl -A "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" http://google.com/search?q=kali -0
curl -X GET http://duckduckgo.com/?q=kali&format=json
## What happened, two things that I see
curl -X GET "http://duckduckgo.com/?q=kali&format=json"
curl -X GET http://duckduckgo.com/?q=kali
curl -X GET https://duckduckgo.com/?q=kali
## So they discriminate against us if we don't specify the format on the HTTP version?
## Is it a HTTP version?
curl -X GET http://duckduckgo.com/?q=kali -0
curl -A "" -X GET http://duckduckgo.com/?q=kali -0
curl -A "" -X GET http://duckduckgo.com/?q=kali
## Another way to manipulate the headers with curl
curl -H "User-Agent:" -X GET http://duckduckgo.com/?q=kali
## Or we could pass in a valid user-agent as before.
curl -H "User-Agent:Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" -X GET http://duckduckgo.com/?q=kali
curl -H "User-Agent:Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" -X GET https://duckduckgo.com/?q=kali
## That is good, they appear to be forcing common user-agent strings over to https

curl -X POST -H "User-Agent:" http://duckduckgo.com/ -d "q=kali linux&format=json"
curl -X POST -H "User-Agent:" -H "Referer: Dan" https://duckduckgo.com/ -d "q=kali linux&format=json"
curl -X POST -H "User-Agent:" -H "Referer: http://google.com/q=duckduckgo"  http://duckduckgo.com/ -d "q=kali linux&format=xml"

## For the leaderboard you will need to pass the data in json (common with API's)
curl -H "Content-Type:application/json" http://localhost:5000/api/player/create -d '{"name":"sgviking"}


